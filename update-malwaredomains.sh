#!/bin/bash
#
# Build our RPZ by merging our special things with malwaredomains.com
#
# Ian Chard  <ian@chard.org>
# Github repo:  https://github.com/Flupsy/malwaredomains-rpz.git
# Licence:  GNU GPL v3.0
#

# File containing local RPZ records to prepend to output
# These are completely separate records
# These should also not be handled here but instead added as a second responze zone
# Therefore, this fork has these removed. Please see the examples at the bottom of
# https://kb.isc.org/docs/aa-00522
#MY_RPZ_RECORDS='/etc/bind/db.rpz.fragment'

# The name of our local RPZ zone
# Yes I default this to my own domain
# suck it
MY_RPZ_ZONE_NAME='click.gido.rpz.adblock'

# Where to write the RPZ we generate
# This can be inferred from the zone file above, so no more work is needed
MY_RPZ_ZONE='/etc/bind/db.'${MY_RPZ_ZONE_NAME}

#URL should be plural, but isnt for backwards compatibility. Separate your inputs by spaces
#This list could use some curation and also could be organized to not run off the end of the page
MALWARE_URL="https://raw.githubusercontent.com/hectorm/hmirror/master/data/adaway.org/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/adblock-nocoin-list/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/adguard-simplified/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/anudeepnd-adservers/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/disconnect.me-ad/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/disconnect.me-malvertising/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/disconnect.me-malware/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/disconnect.me-tracking/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/easyprivacy/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/eth-phishing-detect/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/fademind-add.2o7net/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/fademind-add.dead/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/fademind-add.risk/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/fademind-add.spam/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/kadhosts/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/malwaredomainlist.com/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/malwaredomains.com-immortaldomains/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/malwaredomains.com-justdomains/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/matomo.org-spammers/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/mitchellkrogza-badd-boyz-hosts/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/pgl.yoyo.org/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/ransomwaretracker.abuse.ch/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/someonewhocares.org/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/spam404.com/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/stevenblack/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/winhelp2002.mvps.org/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/zerodot1-coinblockerlists-browser/list.txt 	 https://raw.githubusercontent.com/hectorm/hmirror/master/data/zeustracker.abuse.ch/list.txt 	 https://raw.githubusercontent.com/CHEF-KOCH/Audio-fingerprint-pages/master/AudioFp.txt 	 https://raw.githubusercontent.com/CHEF-KOCH/Canvas-fingerprinting-pages/master/Canvas.txt 	 https://raw.githubusercontent.com/CHEF-KOCH/WebRTC-tracking/master/WebRTC.txt 	 https://raw.githubusercontent.com/CHEF-KOCH/CKs-FilterList/master/Anti-Corp/hosts/NSABlocklist.txt 	 https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt 	 https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt 	  https://www.stopforumspam.com/downloads/toxic_domains_whole.txt"

# If we get fewer lines from malwaredomains than this, we give up
MALWARE_MIN_LINES=100


me=`basename $0`
tmp="/tmp/$me.$$"
tmp_out="/tmp/$me.$$.out"

if [ ! -r $MY_RPZ_RECORDS ]; then
	echo "$me: can't read $MY_RPZ_RECORDS"
	exit 1
fi

#wipe the file
echo >$tmp

#loop over domain lists and download them
#this only works in bash, since zsh doesnt cut on the spaces
#*the more you know*
for i in $MALWARE_URL
do
	wget -O - $i -o /dev/null | sed -e 's/#.*$//' >>$tmp
done

#Ignore errors, lists come and go but it's no big deal
#plus, I'd have to error check for every loop of wget, and what is this, golang?
#if [ $? != 0 ]; then
#	echo "$me: wget failed with exit code $?"
#	rm -f $tmp
#	exit $?
#fi

#I'm keeping this incase github has an outage and I want to not have downtime
#That being said, this whole thing is semi-redundant and if runtime was important
#to me I wouldnt do it
lines=`wc -l $tmp | cut -f1 -d' '`
if [ "$lines" -lt $MALWARE_MIN_LINES ]; then
	echo "$me: malwaredomains.com returned fewer than $MALWARE_MIN_LINES ($lines)"
	rm -f $tmp
	exit 1
fi

serial_number=`date '+%Y%m%d01'`

cat <<EOF >$tmp_out
;
; Response policy zone
;
; DO NOT EDIT -- generated automatically by $0
;

\$TTL 10
@       IN      SOA     adblock.rpz.gido.click gido.gido.click (
	$serial_number         ; Serial
	604800         ; Refresh
	86400         ; Retry
	2419200         ; Expire
	604800 )       ; Negative Cache TTL
;

@	IN	NS	localhost.
;give people who are mildly tech-savvy a chance to not freak out when something breaks
;also, for me when I forget that I used this
@	IN	TXT	"Blocked by DNS, if you think this was in error, please contact your sysadmin"


EOF

#cat $MY_RPZ_RECORDS >> $tmp_out

cat <<EOF >>$tmp_out

;
; Records generated from $MALWARE_URL
;
EOF

while read domain
do
	[ -z $domain ] && continue
	echo "$domain CNAME ." >>$tmp_out
	echo "*.$domain CNAME ." >>$tmp_out
done < $tmp

/usr/sbin/named-checkzone $MY_RPZ_ZONE_NAME $tmp_out >/dev/null
if [ $? != 0 ]; then
	echo "$me: named-checkzone failed on $tmp_out (leaving in place)"
	rm -f $tmp
	exit 1
fi

mv $MY_RPZ_ZONE ${MY_RPZ_ZONE}.bak
mv $tmp_out $MY_RPZ_ZONE
#/usr/sbin/service bind9 reload
rndc reload

rm -f $tmp $tmp_out
